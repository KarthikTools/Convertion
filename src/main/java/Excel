"""
You are enhancing a Python script that converts ReadyAPI test steps to Postman v2.1 format.

The input is an XML project file from ReadyAPI. Each test step can be of type 'restrequest', 'graphql', or others like 'transfer' and 'groovy'.

TASK:
1. In the block where 'restrequest' steps are being converted:
   - Add logic to detect if the body contains a GraphQL-style payload:
     - JSON body should include a top-level 'query' key.
   - If detected:
     - Format the Postman request with:
       - method = 'POST'
       - Content-Type: application/json
       - body = JSON object with 'query' and optional 'variables'
     - Use same endpoint as in restrequest
     - Still allow property transfer scripts or headers to be included.
2. Do not create a separate elif step_type == "graphql" block.
3. Instead, detect GraphQL requests inside the existing restrequest logic and handle them inline.

You may assume:
- Headers and parameters are already extracted.
- Variable placeholders are converted using convert_readyapi_vars_to_postman().
- request_body is available as a string.
- Use json.loads() to detect if it's a GraphQL request.

Output: Updated Postman request JSON block.
"""
